<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxBottomGradient.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>